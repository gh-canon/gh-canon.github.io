(function () {
	function k(a, b) { if ("string" === typeof a) return b ? '"' + a + '"' : a; if (null == a || "number" === typeof a || "function" === typeof a) return "" + a; if (a instanceof Date) return a.toJSON(); if (a instanceof HTMLElement) return a.outerHTML; try { return JSON.stringify(a, function (a, b) { if (b instanceof HTMLElement) return b.outerHTML; if ("function" === typeof b) return "" + b; if ("string" == typeof b) { var c = /^\/Date\((-?\d*)(\-\d+)?\)\/$/.exec(b); if (c) return (new Date(+c[1])).toJSON() } return b }, "  ") } catch (c) { return Object.prototype.toString.call(a) } }
	function r(a) { a = new Date(a.valueOf() - 6E4 * a.getTimezoneOffset()); return a.toISOString().replace("Z", "").replace("T", " ") } function t() { var a = 0, b, c = arguments; return c[0].replace(/(%?%[sdifoO])/g, function (d) { if (3 === d.length) return d; b = c[++a]; if (null == b) return "" + b; switch (d.charAt(1)) { case "s": return b; case "d": case "i": return "number" === typeof b ? Math.floor(b) : "NaN"; case "f": return "number" === typeof b ? b : "NaN"; default: return k(b, !0) } }) } function l() { for (; c.childNodes.length > g;) c.removeChild(c.firstChild) } function d() {
		var a =
		arguments, b = document.createElement("div"); b.className = "as-console-row"; b.setAttribute("data-date", r(new Date)); var d = b.appendChild(document.createElement("code")); d.className = "as-console-row-code"; "string" === typeof a[0] && 1 < a.length && /((^|[^%])%[sdifoO])/.test(a[0]) ? d.textContent = t.apply(null, a) : d.textContent = [].map.call(a, k).join(" "); c.appendChild(b); l(); e.scrollTop = b.offsetTop; return b
	} function f(a) { e.style.display = a ? "block" : "none" } console || (window.console = {}); var m = console.log, n = console.error,
	p = console.warn, q = console.clear, e = document.createElement("div"), c = document.createElement("div"), h = document.createElement("style"), g = 50; e.className = "as-console-wrapper"; c.className = "as-console"; document.body.appendChild(e).appendChild(c); h.type = "text/css"; h.textContent = ".as-console-wrapper { position: fixed; bottom: 0; left: 0; right: 0; max-height: 150px; overflow-y: scroll; overflow-x: hidden; border-top: 1px solid #000; display: none; }\n.as-console { background: #e9e9e9; border: 1px solid #ccc; display: table; width: 100%; counter-reset: console-row; border-collapse: collapse; }\n.as-console-row { display: table-row; counter-increment: console-row; font-family: monospace; font-size: 13px; }\n.as-console-row:after { display: table-cell; padding: 3px 6px; color: rgba(0,0,0,.35); border: 1px solid #ccc; content: attr(data-date); }\n.as-console-row + .as-console-row > * { border: 1px solid #ccc; }\n.as-console-row-code { width: 100%; white-space: pre-wrap; padding: 3px 5px; display: table-cell; font-family: monospace; font-size: 13px; }\n.as-console-error:before { content: 'Error: '; color: #f00  }\n.as-console-warning:before { content: 'Warning: '; color: #e90 }\n@-webkit-keyframes flash { 0% { background: rgba(255,240,0,.25); } 100% { background: none; } }\n@-moz-keyframes flash { 0% { background: rgba(255,240,0,.25); } 100% { background: none; } }\n@-ms-keyframes flash { 0% { background: rgba(255,240,0,.25); } 100% { background: none; } }\n@keyframes flash { 0% { background: rgba(255,240,0,.25); } 100% { background: none; } }\n.as-console-row code, .as-console-row:before, .as-console-row:after { -webkit-animation: flash 1s; -moz-animation: flash 1s; -ms-animation: flash 1s; animation: flash 1s; }";
	document.head.appendChild(h); console.log = function () { var a = arguments; m && m.apply(console, a); d.apply(null, a); f(1) }; console.warn = function () { var a = arguments; p && p.apply(console, a); d.apply(null, a).children[0].classList.add("as-console-warning"); f(1) }; console.error = function () { var a = arguments; n && n.apply(console, a); var b = a[0]; (b instanceof Error ? d({ message: b.message, filename: b.filename, lineno: b.lineno, colno: b.colno }) : d.apply(null, a)).children[0].classList.add("as-console-error"); f(1) }; console.clear = function () {
		for (; c.lastChild;) c.removeChild(c.lastChild);
		q && q.apply(console, arguments); f(0)
	}; console.config = function (a) { "object" === typeof a && 0 < a.maxEntries && (g = a.maxEntries, l()); console.log({ maxEntries: g }) }; window.addEventListener("error", function (a) { d({ message: a.message, filename: a.filename, lineno: a.lineno, colno: a.colno }).children[0].classList.add("as-console-error") })
})();